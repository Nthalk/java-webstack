<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

  <!-- Make sure spring knows where the applicationContext is -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <!-- Bind Spring to Jersey -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>

  <!-- Security -->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <servlet-name>rest</servlet-name>
  </filter-mapping>

  <!-- Define our Jersey servlet container -->
  <servlet>
    <servlet-name>rest</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>

    <!-- Reference our app -->
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>
        com.nthalk.light.resources,
        com.wordnik.swagger.jersey.listing
      </param-value>
    </init-param>
  </servlet>

  <!-- Map our Jersey servlet to handle all rest urls -->
  <servlet-mapping>
    <servlet-name>rest</servlet-name>
    <url-pattern>/api/*</url-pattern>
  </servlet-mapping>

  <!-- WebSocket -->
  <servlet>
    <description>AtmosphereServlet</description>
    <servlet-name>AtmosphereServlet</servlet-name>
    <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>com.nthalk.light.websocket.resources</param-value>
    </init-param>
    <init-param>
      <param-name>org.atmosphere.websocket.messageContentType</param-name>
      <param-value>application/json</param-value>
    </init-param>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>AtmosphereServlet</servlet-name>
    <url-pattern>/websocket/*</url-pattern>
  </servlet-mapping>

  <!-- Documentation -->
  <servlet>
    <servlet-name>JerseyJaxrsConfig</servlet-name>
    <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig
    </servlet-class>
    <init-param>
      <param-name>swagger.api.basepath</param-name>
      <param-value>/rest/api</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>JerseyJaxrsConfig</servlet-name>
    <url-pattern>/unnecessary-swagger</url-pattern>
  </servlet-mapping>
</web-app>

